df <- data.frame(x, y)
lm1 <- lm(y ~ x, weights = weights, df)
dummy_x <- x
dummy_y <- predict(lm1)
dummy_df <- data.frame(dummy_x, dummy_y, Variance=cols)
ggplot(df, aes(y=y, x=x, col=Variance)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x))
library(MASS)
rlm1 = rlm(y ~ x, df)
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/10)
y[91:100] <- y[91:100] + rexp(10, 1/10)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x, col=Variance)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x))
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/10)
y[91:100] <- y[91:100] + rexp(10, 1/10)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x))
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/3)
y[91:100] <- y[91:100] + rexp(10, 1/3)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
exponent <- abs(matrix(1:n - 1, nrow = n, ncol = n, byrow = TRUE) -
(1:n - 1))
Sigma = rho^exponent
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
exponent
Sigma = rho^exponent
rho = 0.8
Sigma = rho^exponent
Sigma
y <- mvrnorm(100, x, Sigma)
df <- data.frame(x, y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
#geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.8
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(100, x, Sigma)
df <- data.frame(x, y)
# rlm1 = rlm(y ~ x, df)
#
# dummy_x <- x
# dummy_y <- predict(rlm1)
# dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
#geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
df$y
df
x <- sort(runif(100,0,10))
rho = 0.8
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
y
df <- data.frame(x, y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
#geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
gls1 = gls(y ~ x, df, cor = Sigma)
library(nlme)
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/3)
y[91:100] <- y[91:100] + rexp(10, 1/3)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.8
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y)
gls1 = gls(y ~ x, df, cor = Sigma)
x <- sort(runif(100,0,10))
rho = 0.8
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
#geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.8
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
set.seed(1)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
set.seed(2)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/3)
y[91:100] <- y[91:100] + rexp(10, 1/3)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
set.seed(1)
x <- sort(runif(100,0,10))
y <- c(x + rnorm(100, 0, 1))
y[1:10] <- y[1:10] - rexp(10, 1/3)
y[91:100] <- y[91:100] + rexp(10, 1/3)
df <- data.frame(x, y)
rlm1 = rlm(y ~ x, df)
dummy_x <- x
dummy_y <- predict(rlm1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
set.seed(1)
x <- runif(100,0,10)
y <- c(x[1:50] + rnorm(50, 0, 1), 2 * x[51:100] + rnorm(50, 0, 5))
cols <- c(rep("Low variance", 50), rep("High variance", 50))
weights <- c(rep(1/1, 50), rep(1/5, 50))
df <- data.frame(x, y, Variance=cols, weights)
lm1 <- lm(y ~ x, weights = weights, df)
dummy_x <- x
dummy_y <- predict(lm1)
dummy_df <- data.frame(dummy_x, dummy_y, Variance=cols)
ggplot(df, aes(y=y, x=x, col=Variance)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="blue", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="red", size=1)
set.seed(2)
x <- sort(runif(100,0,10))
rho = 0.9
exponent <- abs(matrix(1:100 - 1, nrow = 100, ncol = 100, byrow = TRUE) -  (1:100 - 1))
Sigma = rho^exponent
y <- mvrnorm(1, x, Sigma)
df <- data.frame(x, y, id=1:100)
gls1 = gls(y ~ x, df, cor=corAR1(form = ~id))
dummy_x <- x
dummy_y <- predict(gls1)
dummy_df <- data.frame(dummy_x, dummy_y)
ggplot(df, aes(y=y, x=x)) +
geom_point() +
geom_line(data=dummy_df, aes(y=dummy_y, x=dummy_x), col="red", size=1) +
geom_smooth(method = "lm", aes(group=1), se = F, col="blue", size=1)
lm_weight <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries, weight=log(mad_gdppc))
countries <- read.csv("data/countries.csv")
lm_weight <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries, weight=log(mad_gdppc))
lmer(wdi_araland~poly(wdi_precip, 2, raw = TRUE) + (1 || ht_region), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ poly(wdi_precip, 2, raw = TRUE) + (1 | ht_region), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ poly(wdi_precip, 2, raw = TRUE) + (1 || as.factor(ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ poly(wdi_precip, 2, raw = TRUE) + (1 | as.factor(ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 || as.factor(ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 || as.factor(ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 + wdi_precip || as.factor(ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 + wdi_precip || as.factor(ht_region)), countries)
lmer(wdi_araland ~ wdi_precip + (1 || as.factor(countries$ht_region)), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 || cname), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 | cname), countries, weight=log(mad_gdppc))
lmer(wdi_araland ~ wdi_precip + (1 | as.factor(ht_region)), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ wdi_precip + (1 | ht_region), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ wdi_precip + (1 || ht_region), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ wdi_precip + (1 | ht_region), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ wdi_precip + (1 + wdi_precip || ht_region), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ wdi_precip + (1 | ht_region), countries, weight=log(mad_gdppc))
countries$ht_region <- as.factor(countries$ht_region)
lmer(wdi_araland ~ poly(wdi_precip, 2, raw = TRUE) + (1 | ht_region), countries, weight=log(mad_gdppc))
dummy_x <- seq(min(countries$wdi_precip), max(countries$wdi_precip), 1)
min(countries$wdi_precip)
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
dummy_x
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_unweighted_pred
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x))
countries$ht_region <- as.factor(countries$ht_region)
lmer1 <- lmer(wdi_araland ~ poly(wdi_precip, 2, raw = TRUE) + (1 | ht_region), countries, weight=log(mad_gdppc))
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x))
table(countries$ht_region)
as.numeric(v)
as.numeric(table(countries$ht_region))
sample(names(table(countries$ht_region)), length(dummy_x) replace=T, prob=as.numeric(table(countries$ht_region)) / sum(as.numeric(table(countries$ht_region))))
sample(names(table(countries$ht_region)), length(dummy_x), replace=T, prob=as.numeric(table(countries$ht_region)) / sum(as.numeric(table(countries$ht_region))))
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x,
ht_region = sample(names(table(countries$ht_region)),
length(dummy_x),
replace=T,
prob=as.numeric(table(countries$ht_region)) /
sum(as.numeric(table(countries$ht_region))))))
countries_subset <- countries[!is.na(countries$wdi_precip) & !is.na(countries$wdi_araland)]
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
countries_subset <- countries[!is.na(countries$wdi_precip) & !is.na(countries$wdi_araland)]
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x,
ht_region = sample(names(table(countries_subset$ht_region)),
length(dummy_x),
replace=T,
prob=as.numeric(table(countries_subset$ht_region)) /
sum(as.numeric(table(countries_subset$ht_region))))))
table(countries_subset$ht_region)
lemr1
lmer1
summary(lmer1)
countries_subset <- countries[!is.na(countries$wdi_precip) & !is.na(countries$wdi_araland),]
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x,
ht_region = sample(names(table(countries_subset$ht_region)),
length(dummy_x),
replace=T,
prob=as.numeric(table(countries_subset$ht_region)) /
sum(as.numeric(table(countries_subset$ht_region))))))
dim(countries_subset)
dim(countries)
countries_subset <- countries[!is.na(countries$wdi_precip) &
!is.na(countries$wdi_araland) &
!is.na(countries$mad_gdppc),]
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = dummy_x,
ht_region = sample(names(table(countries_subset$ht_region)),
length(dummy_x),
replace=T,
prob=as.numeric(table(countries_subset$ht_region)) /
sum(as.numeric(table(countries_subset$ht_region))))))
dummy_df <- data.frame(dummy_x, lm_unweighted_pred, lm_weighted_pred, lmer_pred)
dummy_df <- melt(dummy_df)
dummy_df
dummy_df <- data.frame(dummy_x, lm_unweighted_pred, lm_weighted_pred, lmer_pred)
dummy_df <- melt(dummy_df, id.vars=dummy_x)
dummy_df <- data.frame(dummy_x, lm_unweighted_pred, lm_weighted_pred, lmer_pred)
dummy_df <- melt(dummy_df, id.vars="dummy_x")
dummy_df
ggplot(countries, aes(x=wdi_precip, y=wdi_araland)) +
geom_point()
colnames(dummY-df)
colnames(dummy_df)
ggplot(countries, aes(x=wdi_precip, y=wdi_araland)) +
geom_point() +
geom_line(data=dummy_df, aes(y=value, x=dummy_x, col=variable), size=0.5)
unique(countries_subset$ht_region)
rep(as.factor(1:10), each=length(dummy_x))
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = rep(dummy_x, 10),
ht_region = rep(as.factor(1:10), each=length(dummy_x))
))
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = rep(dummy_x, 9),
ht_region = rep(as.factor(c(1:8, 10)), each=length(dummy_x))
))
length(lmer_pred)
lmer_pred <- matrix(lmer_pred, nrow = 9)
lmer_pred
table(countries_subset$region)
table(countries_subset$ht_region)
table(countries_subset$ht_region)/sum(table(countries_subset$ht_region))
table(countries_subset$ht_region)/sum(table(countries_subset$ht_region))[1:8, 10]
table(countries_subset$ht_region)/sum(table(countries_subset$ht_region))[c(1:8, 10)]
table(countries_subset$ht_region)/sum(table(countries_subset$ht_region))
c(1:8, 10)
unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]
lmer_pred %*% unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]
lmer_pred <- lmer_pred %*% t(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)])
t(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)])
lmer_pred <- lmer_pred %*% t(as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
t(as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
(as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
lmer_pred <- lmer_pred %*% (as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dim(lmer_pred)
lmer_pred <- t(lmer_pred) %*% (unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)])
lmer_pred
lmer_pred <- as.vector(t(lmer_pred) %*% (unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
countries_subset <- countries[!is.na(countries$wdi_precip) &
!is.na(countries$wdi_araland) &
!is.na(countries$mad_gdppc),]
# Trying to get the region weighting reasonable
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = rep(dummy_x, 9),
ht_region = rep(as.factor(c(1:8, 10)), each=length(dummy_x))
))
lmer_pred <- matrix(lmer_pred, nrow = 9)
lmer_pred <- as.vector(t(lmer_pred) %*% (unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dummy_df <- data.frame(dummy_x, lm_unweighted_pred, lm_weighted_pred, lmer_pred)
dummy_df <- melt(dummy_df, id.vars="dummy_x")
ggplot(countries, aes(x=wdi_precip, y=wdi_araland)) +
geom_point() +
geom_line(data=dummy_df, aes(y=value, x=dummy_x, col=variable), size=0.5)
lmer_pred <- as.vector(lmer_pred %*% t(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
countries_subset <- countries[!is.na(countries$wdi_precip) &
!is.na(countries$wdi_araland) &
!is.na(countries$mad_gdppc),]
# Trying to get the region weighting reasonable
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = rep(dummy_x, 9),
ht_region = rep(as.factor(c(1:8, 10)), each=length(dummy_x))
))
lmer_pred <- matrix(lmer_pred, ncol = 9)
lmer_pred <- as.vector(lmer_pred %*% t(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dim(lmer_pred)
t(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)])
lmer_pred <- as.vector(lmer_pred %*% as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dummy_x <- seq(min(countries$wdi_precip, na.rm = T), max(countries$wdi_precip, na.rm=T), 1)
lm_unweighted <- lm(wdi_araland~poly(wdi_precip, 2, raw = TRUE), countries)
lm_unweighted_pred <- predict(lm_unweighted, newdata=data.frame(wdi_precip = dummy_x))
lm_weighted_pred <- predict(lm_weight, newdata=data.frame(wdi_precip = dummy_x))
countries_subset <- countries[!is.na(countries$wdi_precip) &
!is.na(countries$wdi_araland) &
!is.na(countries$mad_gdppc),]
# Trying to get the region weighting reasonable
lmer_pred <- predict(lmer1, newdata=data.frame(wdi_precip = rep(dummy_x, 9),
ht_region = rep(as.factor(c(1:8, 10)), each=length(dummy_x))
))
lmer_pred <- matrix(lmer_pred, ncol = 9)
lmer_pred <- as.vector(lmer_pred %*% as.matrix(unname(table(countries_subset$ht_region)/sum(table(countries_subset$ht_region)))[c(1:8, 10)]))
dummy_df <- data.frame(dummy_x, lm_unweighted_pred, lm_weighted_pred, lmer_pred)
dummy_df <- melt(dummy_df, id.vars="dummy_x")
ggplot(countries, aes(x=wdi_precip, y=wdi_araland)) +
geom_point() +
geom_line(data=dummy_df, aes(y=value, x=dummy_x, col=variable), size=0.5)
lm(ys ~ xs + xs:as.factor(study), data = df)
study_ns = floor(rexp(n_studies, 1/50)) + 10
df = matrix(nrow = 0, ncol = 3)
stats_df = matrix(nrow = n_studies, ncol = 4)
for (i in 1:n_studies) {
study_n = study_ns[i]
xs = rnorm(study_n, 0, 1)
ys = b_0 + rnorm(study_n, xs * true_effect, 10)
df = rbind(df, cbind(xs, ys, study = rep(i, study_n)))
stats_df[i, 1:2] = summary(lm(ys ~ xs))$coefficients[2, 1:2]
stats_df[i, 3] = study_n
}
stats_df[1:nrow(stats_df), 4] = 1:n_studies
df = data.frame(df)
lmer1 = suppressMessages(lmer(ys ~ xs + (xs - 1 | study), data = df))
stats_df = data.frame(stats_df)
colnames(stats_df) = c("mean", "sd", "n", "study")
stats_df$study <- as.character(stats_df$study)
lm(ys ~ xs + xs:as.factor(study), data = df)
set.seed(139)
nsims = 1000
output_df = matrix(nrow = nsims, ncol = 5)
true_effect = 1
n_studies = 9
b_0 = 120
study_ns = floor(rexp(n_studies, 1/50)) + 10
df = matrix(nrow = 0, ncol = 3)
stats_df = matrix(nrow = n_studies, ncol = 4)
for (i in 1:n_studies) {
study_n = study_ns[i]
xs = rnorm(study_n, 0, 1)
ys = b_0 + rnorm(study_n, xs * true_effect, 10)
df = rbind(df, cbind(xs, ys, study = rep(i, study_n)))
stats_df[i, 1:2] = summary(lm(ys ~ xs))$coefficients[2, 1:2]
stats_df[i, 3] = study_n
}
stats_df[1:nrow(stats_df), 4] = 1:n_studies
df = data.frame(df)
lmer1 = suppressMessages(lmer(ys ~ xs + (xs - 1 | study), data = df))
stats_df = data.frame(stats_df)
colnames(stats_df) = c("mean", "sd", "n", "study")
stats_df$study <- as.character(stats_df$study)
stats_df[nrow(stats_df) + 1, ] = list(sum(stats_df$mean/stats_df$sd)/sum(1/stats_df$sd), NA, NA, NA)
stats_df[nrow(stats_df), 4] = "Likelihood"
stats_df[nrow(stats_df) + 1, ] = list(mean(stats_df$mean), NA, NA, NA)
stats_df[nrow(stats_df), 4] = "Raw means"
stats_df[nrow(stats_df) + 1, ] = c(summary(lmer1)$coefficients[2, 1:2], NA, NA)
stats_df[nrow(stats_df), 4] = "Mixed effects"
summary(lm(ys ~ xs + xs:as.factor(study), data = df))
summary(lm(ys ~ xs + xs:as.factor(study), data = df))$coefficients[2, 1:2]
